==23311== Memcheck, a memory error detector
==23311== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==23311== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==23311== Command: ./checker 932 90 39
==23311== Parent PID: 2586
==23311== 
--23311-- 
--23311-- Valgrind options:
--23311--    --leak-check=full
--23311--    --track-origins=yes
--23311--    --log-file=output_valgrind.txt
--23311--    -v
--23311-- Contents of /proc/version:
--23311--   Linux version 5.3.0-51-generic (buildd@lgw01-amd64-018) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #44~18.04.2-Ubuntu SMP Thu Apr 23 14:27:18 UTC 2020
--23311-- 
--23311-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--23311-- Page sizes: currently 4096, max supported 4096
--23311-- Valgrind library directory: /usr/lib/valgrind
--23311-- Reading syms from /home/svan-der/Codam/Push_swap/checker
--23311-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--23311--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--23311--   .. CRC mismatch (computed 1b7c895e wanted 2943108a)
--23311--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--23311--   .. CRC is valid
--23311-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--23311--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--23311--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--23311--    object doesn't have a symbol table
--23311--    object doesn't have a dynamic symbol table
--23311-- Scheduler: using generic scheduler lock implementation.
--23311-- Reading suppressions file: /usr/lib/valgrind/default.supp
==23311== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-23311-by-svan-der-on-???
==23311== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-23311-by-svan-der-on-???
==23311== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-23311-by-svan-der-on-???
==23311== 
==23311== TO CONTROL THIS PROCESS USING vgdb (which you probably
==23311== don't want to do, unless you know exactly what you're doing,
==23311== or are doing some strange experiment):
==23311==   /usr/lib/valgrind/../../bin/vgdb --pid=23311 ...command...
==23311== 
==23311== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==23311==   /path/to/gdb ./checker
==23311== and then give GDB the following command
==23311==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=23311
==23311== --pid is optional if only one valgrind process is running
==23311== 
--23311-- REDIR: 0x401f2f0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--23311-- REDIR: 0x401f0d0 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--23311-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--23311--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--23311--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--23311--    object doesn't have a symbol table
--23311-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--23311--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--23311--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--23311--    object doesn't have a symbol table
==23311== WARNING: new redirection conflicts with existing -- ignoring it
--23311--     old: 0x0401f2f0 (strlen              ) R-> (0000.0) 0x580608c1 ???
--23311--     new: 0x0401f2f0 (strlen              ) R-> (2007.0) 0x04c32db0 strlen
--23311-- REDIR: 0x401d360 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c33ee0 (strcmp)
--23311-- REDIR: 0x401f830 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c374f0 (mempcpy)
--23311-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--23311--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--23311--   .. CRC mismatch (computed b1c74187 wanted 042cc048)
--23311--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--23311--   .. CRC is valid
--23311-- REDIR: 0x4edac70 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9d40 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edaf50 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9790 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9d70 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edc7c0 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edade0 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edac10 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9d00 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9800 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edad40 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ef80f0 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9ca0 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9870 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edafa0 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9840 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edb0e0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9da0 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed97c0 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ed9c70 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ee46c0 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edaff0 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edabe0 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4ef8eb0 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4eda050 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edaf20 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edaef0 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edc7f0 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4edb040 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--23311-- REDIR: 0x4fca3c0 (libc.so.6:__strrchr_avx2) redirected to 0x4c32730 (rindex)
--23311-- REDIR: 0x4ed3070 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--23311-- REDIR: 0x4ed3950 (libc.so.6:free) redirected to 0x4c30cd0 (free)
--23311-- REDIR: 0x4fca1d0 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
--23311-- REDIR: 0x4fca590 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--23311-- REDIR: 0x4fcaab0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
==23311== 
==23311== HEAP SUMMARY:
==23311==     in use at exit: 138 bytes in 6 blocks
==23311==   total heap usage: 320 allocs, 314 frees, 5,463 bytes allocated
==23311== 
==23311== Searching for pointers to 6 not-freed blocks
==23311== Checked 70,968 bytes
==23311== 
==23311== 41 (32 direct, 9 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 5
==23311==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23311==    by 0x10AA66: ft_memalloc (ft_memalloc.c:19)
==23311==    by 0x109A07: create_instruction (init_ins.c:62)
==23311==    by 0x109AAB: put_instruction (init_ins.c:108)
==23311==    by 0x108E10: get_instruction (exec_checker.c:61)
==23311==    by 0x108B2D: main (checker.c:37)
==23311== 
==23311== 96 (32 direct, 64 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 5
==23311==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23311==    by 0x10AA66: ft_memalloc (ft_memalloc.c:19)
==23311==    by 0x109B62: create_stack (init_stack.c:21)
==23311==    by 0x109BDD: stack_addnew (init_stack.c:38)
==23311==    by 0x109D51: add_num (init_stack.c:73)
==23311==    by 0x109EFA: check_argv (init_stack.c:101)
==23311==    by 0x108B00: main (checker.c:31)
==23311== 
==23311== LEAK SUMMARY:
==23311==    definitely lost: 64 bytes in 2 blocks
==23311==    indirectly lost: 73 bytes in 3 blocks
==23311==      possibly lost: 0 bytes in 0 blocks
==23311==    still reachable: 1 bytes in 1 blocks
==23311==         suppressed: 0 bytes in 0 blocks
==23311== Reachable blocks (those to which a pointer was found) are not shown.
==23311== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23311== 
==23311== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==23311== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
