[1mdiff --git a/shared/init_ins.c b/shared/init_ins.c[m
[1mindex d11a683..f0f5308 100644[m
[1m--- a/shared/init_ins.c[m
[1m+++ b/shared/init_ins.c[m
[36m@@ -6,7 +6,7 @@[m
/*   By: svan-der <svan-der@student.codam.nl>         +#+                     */[m
/*                                                   +#+                      */[m
/*   Created: 2020/02/06 14:50:30 by svan-der      #+#    #+#                 */[m
/*   Updated: [31m[-2020/07/22 18:40:27-][m[32m{+2020/07/20 23:46:24+}[m by svan-der      ########   odam.nl         */
/*                                                                            */[m
/* ************************************************************************** */[m

[36m@@ -40,6 +40,7 @@[m [mt_inst	*create_instruction(int index, char *line)[m
	ft_memcpy(inst->operation, line, inst->content_size);[m
	inst->option = index;[m
	inst->next = NULL;[m
	[32m{+inst->tail = NULL;+}[m
	return (inst);[m
}[m

[36m@@ -58,7 +59,6 @@[m [mvoid	ft_instaddend(t_inst **inst_lst, t_inst *new)[m
int		put_instruction(t_inst **inst_lst, int index, char *line)[m
{[m
	t_inst *new_node;[m
[31m[-	t_inst *temp;-][m

	// ft_printf("line is:%s\n", line);[m
	new_node = create_instruction(index, line);[m
[36m@@ -68,12 +68,14 @@[m [mint		put_instruction(t_inst **inst_lst, int index, char *line)[m
	{[m
		*inst_lst = new_node;[m
		new_node->prev = NULL;[m
		[32m{+new_node->tail = new_node;+}[m
[32m{+		// ft_printf("oper:%s\n", new_node->tail->operation);+}[m
[32m{+		new_node->tail->next = NULL;+}[m
		return (1);[m
	}[m
	[31m[-temp = *inst_lst;-][m
[31m[-	while (temp->next != NULL)-][m
[31m[-		temp = temp->next;-][m
[31m[-	temp->next = new_node;-][m
[31m[-	new_node->prev = temp;-][m[32m{+ft_instaddend(inst_lst, new_node);+}[m
[32m{+	add_inst_tail(inst_lst);+}[m
[32m{+	// print_inst_list(*inst_lst);+}[m
[32m{+	// print_tail_inst((*inst_lst)->tail);+}[m
	return (1);[m
}[m
